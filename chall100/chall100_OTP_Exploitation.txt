The way to solve this challenge is to exploit OTP Authorization. 
The OTP Code is completly random, but the length of said code is only 3 characters long.
This way if we have a password and a username we can brute force all 1000 possible OTP combinations
The issue with this is that if we did this sequentially the IP Load Balancer? will detect an abnormal amount of requests
from us (more then 20 login) and lock us out temporily. Instead we need to use graph QLL Mutations to send
a bunch of requests as once.

For more info learn here: https://graphql.org/learn/queries/

Then we just used a pythons script to send all 500 graphQL mutations at once in order to authenticate (1000 is too may requests at once)
This gives us a 50% shot at getting it right if the otp was randmoized eveyrtime, but the OTP is actually set the same for every user which is
another flow in its implementation.